# vsim -c fifo_tb -voptargs="+acc-coverage" "+no_glitch_msg" -suppress 12110 -do "coverage save -onexit coverage.ucdb" -do "run -all" 
# Start time: 21:36:06 on Feb 10,2024
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# //  Questa Sim-64
# //  Version 10.6b linux_x86_64 May 25 2017
# //
# //  Copyright 1991-2017 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading work.jtag_types_pkg(fast)
# Loading work.fifo_tb(fast)
# Loading work.test(fast)
# Loading work.fifo(fast)
# coverage save -onexit coverage.ucdb
# run -all
# 0 test case: Reset
# data_out is as espected: 0
# full is as espected: 0
# empty is as espected: 1
# 
# 1 test case: Write a data into the buffer
# data_out is as espected: 190
# full is as espected: 0
# empty is as espected: 0
# 
# 1 test case: Write a data into the buffer
# data_out is not as espected: x
# full is as espected: 0
# empty is as espected: 1
# 
# 2 test case: Write the data until full
# data_out is as espected: 1
# full is not as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 2
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 3
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 4
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 5
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 6
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 7
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 8
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 9
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 10
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 11
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 12
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 13
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 14
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 15
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 16
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 17
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 18
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 19
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 20
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 21
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 22
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 23
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 24
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 25
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 26
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 27
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 28
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 29
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 30
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 31
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 32
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 33
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 34
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 35
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 36
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 37
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 38
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 39
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 40
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 41
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 42
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 43
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 44
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 45
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 46
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 47
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 48
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 49
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 50
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 51
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 52
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 53
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 54
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 55
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 56
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 57
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 58
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 59
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 60
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 61
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 62
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 63
# full is as espected: 0
# empty is as espected: 0
# 
# 2 test case: Write the data until full
# data_out is as espected: 64
# full is as espected: 0
# empty is not as espected: 0
# 
# 2 test case: Write the data until full
# data_out is not as espected: x
# full is as espected: 0
# empty is not as espected: 1
# 
# 2 test case: Write the data until full
# data_out is not as espected: x
# full is as espected: 0
# empty is not as espected: 1
# 
# 3 test case: Read enable is on when buffer is empty
# data_out is not as espected: x
# full is as espected: 0
# empty is as espected: 1
# 
# ** Note: $stop    : tb/fifo_tb.sv(156)
#    Time: 5280 ns  Iteration: 1  Instance: /fifo_tb/PROG
# Break at tb/fifo_tb.sv line 156
# Stopped at tb/fifo_tb.sv line 156
# 
# <EOF>
# Saving coverage database on exit...
# End time: 21:36:06 on Feb 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
